{"version":3,"sources":["/home/jared/Desktop/funCode/node_modules/acorn/src/loose/parseutil.js"],"names":[],"mappings":"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","file":"parseutil-compiled.js","sourcesContent":["import {LooseParser} from \"./state\"\nimport {Node, SourceLocation, lineBreak, isNewLine, tokTypes as tt} from \"..\"\n\nconst lp = LooseParser.prototype\n\nlp.startNode = function() {\n  let node = new Node\n  node.start = this.tok.start\n  if (this.options.locations)\n    node.loc = new SourceLocation(this.toks, this.tok.loc.start)\n  if (this.options.directSourceFile)\n    node.sourceFile = this.options.directSourceFile\n  if (this.options.ranges)\n    node.range = [this.tok.start, 0]\n  return node\n}\n\nlp.storeCurrentPos = function() {\n  return this.options.locations ? [this.tok.start, this.tok.loc.start] : this.tok.start\n}\n\nlp.startNodeAt = function(pos) {\n  let node = new Node\n  if (this.options.locations) {\n    node.start = pos[0]\n    node.loc = new SourceLocation(this.toks, pos[1])\n    pos = pos[0]\n  } else {\n    node.start = pos\n  }\n  if (this.options.directSourceFile)\n    node.sourceFile = this.options.directSourceFile\n  if (this.options.ranges)\n    node.range = [pos, 0]\n  return node\n}\n\nlp.finishNode = function(node, type) {\n  node.type = type\n  node.end = this.last.end\n  if (this.options.locations)\n    node.loc.end = this.last.loc.end\n  if (this.options.ranges)\n    node.range[1] = this.last.end\n  return node\n}\n\nlp.dummyIdent = function() {\n  let dummy = this.startNode()\n  dummy.name = \"✖\"\n  return this.finishNode(dummy, \"Identifier\")\n}\n\nexport function isDummy(node) { return node.name == \"✖\" }\n\nlp.eat = function(type) {\n  if (this.tok.type === type) {\n    this.next()\n    return true\n  } else {\n    return false\n  }\n}\n\nlp.isContextual = function(name) {\n  return this.tok.type === tt.name && this.tok.value === name\n}\n\nlp.eatContextual = function(name) {\n  return this.tok.value === name && this.eat(tt.name)\n}\n\nlp.canInsertSemicolon = function() {\n  return this.tok.type === tt.eof || this.tok.type === tt.braceR ||\n    lineBreak.test(this.input.slice(this.last.end, this.tok.start))\n}\n\nlp.semicolon = function() {\n  return this.eat(tt.semi)\n}\n\nlp.expect = function(type) {\n  if (this.eat(type)) return true\n  for (let i = 1; i <= 2; i++) {\n    if (this.lookAhead(i).type == type) {\n      for (let j = 0; j < i; j++) this.next()\n      return true\n    }\n  }\n}\n\nlp.pushCx = function() {\n  this.context.push(this.curIndent)\n}\nlp.popCx = function() {\n  this.curIndent = this.context.pop()\n}\n\nlp.lineEnd = function(pos) {\n  while (pos < this.input.length && !isNewLine(this.input.charCodeAt(pos))) ++pos\n  return pos\n}\n\nlp.indentationAfter = function(pos) {\n  for (let count = 0;; ++pos) {\n    let ch = this.input.charCodeAt(pos)\n    if (ch === 32) ++count\n    else if (ch === 9) count += this.options.tabSize\n    else return count\n  }\n}\n\nlp.closes = function(closeTok, indent, line, blockHeuristic) {\n  if (this.tok.type === closeTok || this.tok.type === tt.eof) return true\n  return line != this.curLineStart && this.curIndent < indent && this.tokenStartsLine() &&\n    (!blockHeuristic || this.nextLineStart >= this.input.length ||\n     this.indentationAfter(this.nextLineStart) < indent)\n}\n\nlp.tokenStartsLine = function() {\n  for (let p = this.tok.start - 1; p >= this.curLineStart; --p) {\n    let ch = this.input.charCodeAt(p)\n    if (ch !== 9 && ch !== 32) return false\n  }\n  return true\n}\n"]}