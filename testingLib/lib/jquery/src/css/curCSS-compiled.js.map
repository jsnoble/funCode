{"version":3,"sources":["/home/jared/Desktop/funCode/node_modules/jquery/src/css/curCSS.js"],"names":[],"mappings":";;AAAA,MAAM,CAAC,CACN,SAAS,EACT,iBAAiB,EACjB,eAAe,EACf,iBAAiB,EACjB,aAAa;CACb,EAAE,UAAU,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAG;;AAErD,UAAS,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAG;AACvC,MAAI,KAAK;MAAE,QAAQ;MAAE,QAAQ;MAAE,GAAG;MACjC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;;AAEpB,UAAQ,GAAG,QAAQ,IAAI,SAAS,CAAE,IAAI,CAAE,CAAC;;;;AAIzC,MAAK,QAAQ,EAAG;AACf,MAAG,GAAG,QAAQ,CAAC,gBAAgB,CAAE,IAAI,CAAE,IAAI,QAAQ,CAAE,IAAI,CAAE,CAAC;GAC5D;;AAED,MAAK,QAAQ,EAAG;;AAEf,OAAK,GAAG,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAE,EAAG;AACjE,OAAG,GAAG,MAAM,CAAC,KAAK,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;IACjC;;;;;;AAMD,OAAK,SAAS,CAAC,IAAI,CAAE,GAAG,CAAE,IAAI,OAAO,CAAC,IAAI,CAAE,IAAI,CAAE,EAAG;;;AAGpD,SAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AACpB,YAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;AAC1B,YAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;;;AAG1B,SAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;AACpD,OAAG,GAAG,QAAQ,CAAC,KAAK,CAAC;;;AAGrB,SAAK,CAAC,KAAK,GAAG,KAAK,CAAC;AACpB,SAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC1B,SAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC1B;GACD;;AAED,SAAO,GAAG,KAAK,SAAS;;;AAGvB,KAAG,GAAG,EAAE,GACR,GAAG,CAAC;EACL;;AAED,QAAO,MAAM,CAAC;CACb,CAAC,CAAC","file":"curCSS-compiled.js","sourcesContent":["define([\n\t\"../core\",\n\t\"./var/rnumnonpx\",\n\t\"./var/rmargin\",\n\t\"./var/getStyles\",\n\t\"../selector\" // contains\n], function( jQuery, rnumnonpx, rmargin, getStyles ) {\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// Support: IE9\n\t// getPropertyValue is only needed for .css('filter') (#12537)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\t}\n\n\tif ( computed ) {\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// Support: iOS < 6\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\n\t\t// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\t\t// Support: IE\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\nreturn curCSS;\n});\n"]}