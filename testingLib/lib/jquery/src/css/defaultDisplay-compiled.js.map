{"version":3,"sources":["/home/jared/Desktop/funCode/node_modules/jquery/src/css/defaultDisplay.js"],"names":[],"mappings":";;AAAA,MAAM,CAAC,CACN,SAAS,EACT,iBAAiB;CACjB,EAAE,UAAU,MAAM,EAAG;;AAEtB,KAAI,MAAM;KACT,WAAW,GAAG,EAAE,CAAC;;;;;;;;AAQlB,UAAS,aAAa,CAAE,IAAI,EAAE,GAAG,EAAG;AACnC,MAAI,KAAK;MACR,IAAI,GAAG,MAAM,CAAE,GAAG,CAAC,aAAa,CAAE,IAAI,CAAE,CAAE,CAAC,QAAQ,CAAE,GAAG,CAAC,IAAI,CAAE;;;;AAG/D,SAAO,GAAG,MAAM,CAAC,uBAAuB,KAAM,KAAK,GAAG,MAAM,CAAC,uBAAuB,CAAE,IAAI,CAAE,CAAC,CAAE,CAAE,CAAA,AAAE;;;;AAIlG,OAAK,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC,CAAE,EAAE,SAAS,CAAE,CAAC;;;;AAIrD,MAAI,CAAC,MAAM,EAAE,CAAC;;AAEd,SAAO,OAAO,CAAC;EACf;;;;;;AAMD,UAAS,cAAc,CAAE,QAAQ,EAAG;AACnC,MAAI,GAAG,GAAG,QAAQ;MACjB,OAAO,GAAG,WAAW,CAAE,QAAQ,CAAE,CAAC;;AAEnC,MAAK,CAAC,OAAO,EAAG;AACf,UAAO,GAAG,aAAa,CAAE,QAAQ,EAAE,GAAG,CAAE,CAAC;;;AAGzC,OAAK,OAAO,KAAK,MAAM,IAAI,CAAC,OAAO,EAAG;;;AAGrC,UAAM,GAAG,CAAC,MAAM,IAAI,MAAM,CAAE,gDAAgD,CAAE,CAAA,CAAE,QAAQ,CAAE,GAAG,CAAC,eAAe,CAAE,CAAC;;;AAGhH,OAAG,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC,eAAe,CAAC;;;AAGlC,OAAG,CAAC,KAAK,EAAE,CAAC;AACZ,OAAG,CAAC,KAAK,EAAE,CAAC;;AAEZ,WAAO,GAAG,aAAa,CAAE,QAAQ,EAAE,GAAG,CAAE,CAAC;AACzC,UAAM,CAAC,MAAM,EAAE,CAAC;IAChB;;;AAGD,cAAW,CAAE,QAAQ,CAAE,GAAG,OAAO,CAAC;GAClC;;AAED,SAAO,OAAO,CAAC;EACf;;AAED,QAAO,cAAc,CAAC;CAErB,CAAC,CAAC","file":"defaultDisplay-compiled.js","sourcesContent":["define([\n\t\"../core\",\n\t\"../manipulation\" // appendTo\n], function( jQuery ) {\n\nvar iframe,\n\telemdisplay = {};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar style,\n\t\telem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\t// getDefaultComputedStyle might be reliably used only on attached element\n\t\tdisplay = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?\n\n\t\t\t// Use of this method is a temporary fix (more like optimization) until something better comes along,\n\t\t\t// since it was removed from specification and supported only in FF\n\t\t\tstyle.display : jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = (iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" )).appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = iframe[ 0 ].contentDocument;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\n\nreturn defaultDisplay;\n\n});\n"]}