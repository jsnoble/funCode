{"version":3,"sources":["/home/jared/Desktop/funCode/node_modules/jquery/src/core/ready.js"],"names":[],"mappings":";;AAAA,MAAM,CAAC,CACN,SAAS,EACT,cAAc,EACd,aAAa,CACb,EAAE,UAAU,MAAM,EAAG;;;AAGtB,KAAI,SAAS,CAAC;;AAEd,OAAM,CAAC,EAAE,CAAC,KAAK,GAAG,UAAU,EAAE,EAAG;;AAEhC,QAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC;;AAElC,SAAO,IAAI,CAAC;EACZ,CAAC;;AAEF,OAAM,CAAC,MAAM,CAAC;;AAEb,SAAO,EAAE,KAAK;;;;AAId,WAAS,EAAE,CAAC;;;AAGZ,WAAS,EAAE,mBAAU,IAAI,EAAG;AAC3B,OAAK,IAAI,EAAG;AACX,UAAM,CAAC,SAAS,EAAE,CAAC;IACnB,MAAM;AACN,UAAM,CAAC,KAAK,CAAE,IAAI,CAAE,CAAC;IACrB;GACD;;;AAGD,OAAK,EAAE,eAAU,IAAI,EAAG;;;AAGvB,OAAK,IAAI,KAAK,IAAI,GAAG,EAAE,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,OAAO,EAAG;AAC1D,WAAO;IACP;;;AAGD,SAAM,CAAC,OAAO,GAAG,IAAI,CAAC;;;AAGtB,OAAK,IAAI,KAAK,IAAI,IAAI,EAAE,MAAM,CAAC,SAAS,GAAG,CAAC,EAAG;AAC9C,WAAO;IACP;;;AAGD,YAAS,CAAC,WAAW,CAAE,QAAQ,EAAE,CAAE,MAAM,CAAE,CAAE,CAAC;;;AAG9C,OAAK,MAAM,CAAC,EAAE,CAAC,cAAc,EAAG;AAC/B,UAAM,CAAE,QAAQ,CAAE,CAAC,cAAc,CAAE,OAAO,CAAE,CAAC;AAC7C,UAAM,CAAE,QAAQ,CAAE,CAAC,GAAG,CAAE,OAAO,CAAE,CAAC;IAClC;GACD;EACD,CAAC,CAAC;;;;;AAKH,UAAS,SAAS,GAAG;AACpB,UAAQ,CAAC,mBAAmB,CAAE,kBAAkB,EAAE,SAAS,EAAE,KAAK,CAAE,CAAC;AACrE,QAAM,CAAC,mBAAmB,CAAE,MAAM,EAAE,SAAS,EAAE,KAAK,CAAE,CAAC;AACvD,QAAM,CAAC,KAAK,EAAE,CAAC;EACf;;AAED,OAAM,CAAC,KAAK,CAAC,OAAO,GAAG,UAAU,GAAG,EAAG;AACtC,MAAK,CAAC,SAAS,EAAG;;AAEjB,YAAS,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;;;;;AAK9B,OAAK,QAAQ,CAAC,UAAU,KAAK,UAAU,EAAG;;AAEzC,cAAU,CAAE,MAAM,CAAC,KAAK,CAAE,CAAC;IAE3B,MAAM;;;AAGN,YAAQ,CAAC,gBAAgB,CAAE,kBAAkB,EAAE,SAAS,EAAE,KAAK,CAAE,CAAC;;;AAGlE,UAAM,CAAC,gBAAgB,CAAE,MAAM,EAAE,SAAS,EAAE,KAAK,CAAE,CAAC;IACpD;GACD;AACD,SAAO,SAAS,CAAC,OAAO,CAAE,GAAG,CAAE,CAAC;EAChC,CAAC;;;AAGF,OAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;CAEtB,CAAC,CAAC","file":"ready-compiled.js","sourcesContent":["define([\n\t\"../core\",\n\t\"../core/init\",\n\t\"../deferred\"\n], function( jQuery ) {\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend({\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n});\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed, false );\n\twindow.removeEventListener( \"load\", completed, false );\n\tjQuery.ready();\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called after the browser event has already occurred.\n\t\t// We once tried to use readyState \"interactive\" here, but it caused issues like the one\n\t\t// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\n\t\tif ( document.readyState === \"complete\" ) {\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\tsetTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed, false );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed, false );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n});\n"]}