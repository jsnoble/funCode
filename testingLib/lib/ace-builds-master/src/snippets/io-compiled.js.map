{"version":3,"sources":["/home/jared/Desktop/funCode/testingLib/lib/ace-builds-master/src/snippets/io.js"],"names":[],"mappings":";;AAAA,MAAM,CAAC,iBAAiB,EAAC,CAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,CAAC,EAAE,UAAS,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE;AAC5F,gBAAY,CAAC;;AAEb,WAAO,CAAC,QAAQ,GAAG,CACf;AACI,iBAAW,wCAAwC;AACnD,cAAQ,cAAc;AACtB,eAAS,IAAI;AACb,oBAAc,IAAI;KACrB,EACD;AACI,iBAAW,sDAAsD;AACjE,cAAQ,UAAU;AAClB,eAAS,IAAI;AACb,oBAAc,KAAK;KACtB,EACD;AACI,iBAAW,oDAAoD;AAC/D,cAAQ,SAAS;AACjB,eAAS,IAAI;AACb,oBAAc,IAAI;KACrB,EACD;AACI,iBAAW,iCAAiC;AAC5C,uBAAiB,IAAI;AACrB,cAAQ,yBAAyB;AACjC,eAAS,IAAI;AACb,oBAAc,GAAG;KACpB,EACD;AACI,iBAAW,UAAU;AACrB,uBAAiB,IAAI;AACrB,cAAQ,0CAA0C;AAClD,eAAS,4DAA4D;KACxE,EACD;AACI,iBAAW,+CAA+C;AAC1D,cAAQ,QAAQ;AAChB,eAAS,IAAI;AACb,oBAAc,GAAG;KACpB,EACD;AACI,iBAAW,qEAAqE;AAChF,cAAQ,SAAS;AACjB,eAAS,IAAI;AACb,oBAAc,IAAI;KACrB,EACD;AACI,iBAAW,wCAAwC;AACnD,cAAQ,iBAAiB;AACzB,eAAS,IAAI;AACb,oBAAc,MAAM;KACvB,EACD;AACI,iBAAW,0CAA0C;AACrD,cAAQ,YAAY;AACpB,eAAS,IAAI;AACb,oBAAc,IAAI;KACrB,EACD;AACI,iBAAW,wDAAwD;AACnE,cAAQ,UAAU;AAClB,eAAS,IAAI;AACb,oBAAc,IAAI;KACrB,CACJ,CAAC;AACF,WAAO,CAAC,KAAK,GAAG,IAAI,CAAC;CAEpB,CAAC,CAAC","file":"io-compiled.js","sourcesContent":["define(\"ace/snippets/io\",[\"require\",\"exports\",\"module\"], function(require, exports, module) {\n\"use strict\";\n\nexports.snippets = [\n    {\n        \"content\": \"assertEquals(${1:expected}, ${2:expr})\",\n        \"name\": \"assertEquals\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ae\"\n    },\n    {\n        \"content\": \"${1:${2:newValue} := ${3:Object} }clone do(\\n\\t$0\\n)\",\n        \"name\": \"clone do\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"cdo\"\n    },\n    {\n        \"content\": \"docSlot(\\\"${1:slotName}\\\", \\\"${2:documentation}\\\")\",\n        \"name\": \"docSlot\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ds\"\n    },\n    {\n        \"content\": \"(${1:header,}\\n\\t${2:body}\\n)$0\",\n        \"keyEquivalent\": \"@(\",\n        \"name\": \"Indented Bracketed Line\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"(\"\n    },\n    {\n        \"content\": \"\\n\\t$0\\n\",\n        \"keyEquivalent\": \"\\r\",\n        \"name\": \"Special: Return Inside Empty Parenthesis\",\n        \"scope\": \"io meta.empty-parenthesis.io, io meta.comma-parenthesis.io\"\n    },\n    {\n        \"content\": \"${1:methodName} := method(${2:args,}\\n\\t$0\\n)\",\n        \"name\": \"method\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"m\"\n    },\n    {\n        \"content\": \"newSlot(\\\"${1:slotName}\\\", ${2:defaultValue}, \\\"${3:docString}\\\")$0\",\n        \"name\": \"newSlot\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ns\"\n    },\n    {\n        \"content\": \"${1:name} := Object clone do(\\n\\t$0\\n)\",\n        \"name\": \"Object clone do\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ocdo\"\n    },\n    {\n        \"content\": \"test${1:SomeFeature} := method(\\n\\t$0\\n)\",\n        \"name\": \"testMethod\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ts\"\n    },\n    {\n        \"content\": \"${1:Something}Test := ${2:UnitTest} clone do(\\n\\t$0\\n)\",\n        \"name\": \"UnitTest\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ut\"\n    }\n];\nexports.scope = \"io\";\n\n});\n"]}